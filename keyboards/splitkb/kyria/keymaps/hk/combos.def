#define C_STENOT SYM

//- Combo Modfiers
#define C_LT LCTL_SPC
#define C_RT RSFT_ENT

COMB(C_FUNC, MO(_FUNCTION), C_LT, C_RT)

#include "combo_mods.def"

//- Symbols
//-- Parenthesis <([{}])>
COMB(C_LABK,  KC_LABK, KC_A, KC_Q)
COMB(C_LPRNT, KC_LPRN, KC_R, KC_W)
COMB(C_LBRC,  KC_LBRC, KC_S, KC_F)
COMB(C_LCBR,  KC_LCBR, KC_T, KC_P)
COMB(C_RPRNT, KC_RCBR, KC_N, KC_L)
COMB(C_RBRC,  KC_RBRC, KC_E, KC_U)
COMB(C_RCBR,  KC_RPRN, KC_I, KC_Y)
COMB(C_RABK,  KC_RABK, KC_O, KC_SCLN)

COMB(C_MINS,  KC_MINS, KC_T, KC_D)
COMB(C_UNDS,  KC_UNDS, KC_N, KC_H)

SUBS(C_RARROW,  "->", KC_I, KC_DOT)

//- Postfix
SUBS(C_POSTFIX_ARE, SS_TAP(X_BACKSPACE) "'re ", CTL_QUOT, KC_R)
SUBS(C_POSTFIX_IS,  SS_TAP(X_BACKSPACE) "'s ", CTL_QUOT, KC_S)
SUBS(C_POSTFIX_NOT, SS_TAP(X_BACKSPACE) "n't ", CTL_QUOT, KC_T)
SUBS(C_POSTFIX_HAVE, SS_TAP(X_BACKSPACE) "'ve ", CTL_QUOT, KC_V)
SUBS(C_POSTFIX_WILL, SS_TAP(X_BACKSPACE) "'ll ", CTL_QUOT, KC_W)
SUBS(C_POSTFIX_COMMA, SS_TAP(X_BACKSPACE) ", ", C_STENOT, KC_COMMA)

//- Steno-Lite
SUBS(C_STENO_AND, "and ", C_STENOT, KC_A)
SUBS(C_STENO_ARE, "are ", C_STENOT, KC_A, KC_R)
SUBS(C_STENO_ABOUT, "about ", C_STENOT, KC_A, KC_B)

SUBS(C_STENO_BECAUSE, "because ", C_STENOT, KC_C)

SUBS(C_STENO_EVERY, "every ", C_STENOT, KC_E, KC_V)

SUBS(C_STENO_FOR, "for ", C_STENOT, KC_F)
SUBS(C_STENO_FROM, "from ", C_STENOT, KC_F, KC_R)

SUBS(C_STENO_ITS, "it's ", CTL_QUOT, KC_I)
SUBS(C_STENO_DONT, SS_TAP(X_BACKSPACE) "don't ", CTL_QUOT, KC_D)

SUBS(C_STENO_THE, "the ", C_STENOT, KC_T)
SUBS(C_STENO_THAT, "that ", C_STENOT, KC_T, KC_A)
SUBS(C_STENO_THERE, "there ", C_STENOT, KC_T, KC_R)
SUBS(C_STENO_THIS, "this ", C_STENOT, KC_T, KC_S)
SUBS(C_STENO_THING, "thing ", C_STENOT, KC_T, KC_N)
SUBS(C_STENO_THINGS, "things ", C_STENOT, KC_T, KC_N, KC_S)
SUBS(C_STENO_THEY, "they ", C_STENOT, KC_T, KC_Y)
SUBS(C_STENO_THEIR, "their ", C_STENOT, KC_T, KC_I)
SUBS(C_STENO_TAKE, "take ", C_STENOT, KC_T, KC_K)

SUBS(C_STENO_NOT, "not ", C_STENOT, KC_N)
SUBS(C_STENO_NEVER, "never ", C_STENOT, KC_N, KC_V)

SUBS(C_STENO_HAVE, "have ", C_STENOT, KC_H)

SUBS(C_STENO_WHAT, "what ", C_STENOT, KC_W)
SUBS(C_STENO_WITH, "with ", C_STENOT, KC_W, KC_I)
SUBS(C_STENO_WHICH, "which ", C_STENOT, KC_S)
SUBS(C_STENO_WITHOUT, "without ", C_STENOT, KC_W, KC_O)

SUBS(C_STENO_YOU, "you ", C_STENOT, KC_U)
SUBS(C_STENO_YOUR, "your ", C_STENOT, KC_U, KC_R)
SUBS(C_STENO_YOURS, "yours ", C_STENOT, KC_U, KC_R, KC_S)

SUBS(C_STENO_OULD, "ould ", C_STENOT, KC_D)

SUBS(C_STENO_MENT, "ment ", C_STENOT, KC_M)
SUBS(C_STENO_MENTS, "ments ", C_STENOT, KC_M, KC_S)
SUBS(C_STENO_TION, "tion ", C_STENOT, KC_I)
SUBS(C_STENO_TIONS, "tions ", C_STENOT, KC_I, KC_S)
SUBS(C_STENO_ING, "ing ", C_STENOT, KC_G)
SUBS(C_STENO_INGS, "ings ", C_STENOT, KC_G, KC_S)
SUBS(C_STENO_OUGH, "ough", C_STENOT, KC_O)
SUBS(C_STENO_QUE, "que", C_STENOT, KC_Q)

